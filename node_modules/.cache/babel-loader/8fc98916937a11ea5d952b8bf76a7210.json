{"ast":null,"code":"var _jsxFileName = \"/home/vats/Web Dev/booking/client/src/components/Reserve/Reserve.jsx\",\n    _s = $RefreshSig$();\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleXmark } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useContext, useState } from 'react';\nimport \"./reserve.css\";\nimport useFetch from '../../hooks/useFetch';\nimport { SearchContext } from '../../context/searchContext';\nimport { getDate } from 'date-fns';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reserve = _ref => {\n  _s();\n\n  let {\n    setOpen,\n    hotelId\n  } = _ref;\n  //selected room\n  const [selectedRoom, setSelectedRoom] = useState([]);\n  const {\n    data,\n    loading,\n    error\n  } = useFetch(`http://localhost:8080/api/hotels/room/${hotelId}`);\n  const {\n    dates\n  } = useContext(SearchContext);\n\n  const getDatesInRange = (startDate, endDate) => {\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    const date = new Date(start.getTime());\n    consdates = [];\n\n    while (date <= end) {\n      dates.push(new Date(date).getTime());\n      date.setDate(date.getDate() + 1);\n    }\n\n    return dates;\n  };\n\n  const allDates = getDatesInRange(dates[0].startDate, dates[0].endDate);\n\n  const isAvailable = roomNumber => {\n    const isFound = roomNumber.unavailableDates.some(date => allDates.includes(new Date(date).getTime()));\n    return !isFound;\n  };\n\n  const handleSelect = e => {\n    const checked = e.target.checked;\n    const value = e.target.value;\n    setSelectedRoom(checked ? [...selectedRoom, value] : selectedRoom.filter(item => item !== value));\n  };\n\n  const handleClick = async () => {\n    try {\n      await Promise.all(selectedRoom);\n      const res = await axios.put();\n      return setOpen(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reserve\",\n    children: [\"select\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rcontainer\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faCircleXmark,\n        className: \"rClose\",\n        onClick: () => setOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Select your Rooms! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rItemInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rTitle\",\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rDesc\",\n            children: item.desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rMax\",\n            children: [\"Max People: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: item.maxPeople\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rprice\",\n            children: item.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rSelectRooms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), item.roomNumbers.map(roomNumber => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"room\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: roomNumber.number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            disabled: !isAvailable(roomNumber),\n            value: roomNumber._id,\n            onChange: handleSelect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        className: \"rButton\",\n        children: \"Reserve Now!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Reserve, \"LnkCPSqv0biopwBoeGmH85ZPVWk=\", false, function () {\n  return [useFetch];\n});\n\n_c = Reserve;\nexport default Reserve;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"sources":["/home/vats/Web Dev/booking/client/src/components/Reserve/Reserve.jsx"],"names":["FontAwesomeIcon","faCircleXmark","React","useContext","useState","useFetch","SearchContext","getDate","axios","Reserve","setOpen","hotelId","selectedRoom","setSelectedRoom","data","loading","error","dates","getDatesInRange","startDate","endDate","start","Date","end","date","getTime","consdates","push","setDate","allDates","isAvailable","roomNumber","isFound","unavailableDates","some","includes","handleSelect","e","checked","target","value","filter","item","handleClick","Promise","all","res","put","console","log","map","title","desc","maxPeople","price","roomNumbers","number","_id"],"mappings":"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","sourcesContent":[" import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCircleXmark } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useContext, useState } from 'react'\nimport \"./reserve.css\"\nimport useFetch from '../../hooks/useFetch'\nimport { SearchContext } from '../../context/searchContext';\nimport { getDate } from 'date-fns';\nimport axios from 'axios';\n\nconst Reserve = ({setOpen, hotelId}) => {\n//selected room\n  const [selectedRoom, setSelectedRoom] = useState([])\n  const {data,loading,error} = useFetch(`http://localhost:8080/api/hotels/room/${hotelId}`)\n  const {dates} = useContext(SearchContext)\n\n\n  const getDatesInRange = (startDate,endDate)=>{\n    const start = new Date(startDate)\n    const end = new Date(endDate)\n    const date = new Date(start.getTime());\n\n    consdates = []\n\n    while(date<= end){\n      dates.push(new Date(date).getTime())\n      date.setDate(date.getDate()+1 )\n    }\n\n    return dates\n  }\n\n  const allDates = getDatesInRange(dates[0].startDate, dates[0].endDate)\n\n  const isAvailable = (roomNumber) =>{\n    const isFound = roomNumber.unavailableDates.some(date=>\n      allDates.includes(new Date(date).getTime())\n      );\n      return !isFound\n  }\n\n  const handleSelect = (e) =>{\n    const checked =  e.target.checked;\n    const value = e.target.value;\n    setSelectedRoom(checked ? [...selectedRoom, value]: selectedRoom.filter((item)=> item !== value))\n  }\n\n  const handleClick =async ()=>{\n    try {\n      await Promise.all(selectedRoom)\n      const res = await axios.put()\n      return setOpen(false)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  return (\n    <div className=\"reserve\">select\n        <div className=\"rcontainer\">\n        <FontAwesomeIcon\n          icon={faCircleXmark}\n          className=\"rClose\"\n          onClick={() => setOpen(false)}\n        /> \n        <span>Select your Rooms! </span>\n        {data.map(item=>(\n          <div className=\"rItem\">\n            <div className=\"rItemInfo\">\n              <div className=\"rTitle\">{item.title}</div>\n              <div className=\"rDesc\">{item.desc}</div>\n              <div className=\"rMax\">\n                Max People: <b>{item.maxPeople}</b>\n              </div>\n              <div className=\"rprice\">{item.price}</div>\n            </div>\n            <div className=\"rSelectRooms\"></div>\n              {item.roomNumbers.map(roomNumber=>(\n                <div className=\"room\">\n                <label>{roomNumber.number}</label>\n                <input type='checkbox' disabled={!isAvailable(roomNumber)} value={roomNumber._id} onChange={handleSelect}/>\n                </div>\n              ))}\n            </div>\n        ))}\n        <button onClick={handleClick} className=\"rButton\">\n          Reserve Now!\n        </button>\n        </div>\n    </div>\n  )\n}\n\nexport default Reserve"]},"metadata":{},"sourceType":"module"}