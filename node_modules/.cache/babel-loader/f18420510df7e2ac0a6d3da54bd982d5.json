{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n\n      try {\n        const res = await axios.get(url);\n        setData(res.data);\n      } catch (error) {\n        setError(error);\n      }\n\n      setLoading(false);\n    };\n\n    fetchData();\n  }, [url]);\n  return {\n    data,\n    loading,\n    error\n  };\n};\n\n_s(useFetch, \"/gUsSzkJyx4qiX8Q9LeVlCy7zJg=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/home/vats/Web Dev/booking/client/src/hooks/useFetch.js"],"names":["useEffect","useState","axios","useFetch","url","data","setData","loading","setLoading","error","setError","fetchData","res","get"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AAEtB,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBL,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,KAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMW,SAAS,GAAG,YAAS;AACvBH,MAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,UAAI;AACA,cAAMI,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAUT,GAAV,CAAlB;AACAE,QAAAA,OAAO,CAACM,GAAG,CAACP,IAAL,CAAP;AACH,OAHD,CAGE,OAAOI,KAAP,EAAc;AACZC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACH;;AACDD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KATD;;AAUAG,IAAAA,SAAS;AACZ,GAZQ,EAYP,CAACP,GAAD,CAZO,CAAT;AAgBA,SAAO;AAACC,IAAAA,IAAD;AAAME,IAAAA,OAAN;AAAcE,IAAAA;AAAd,GAAP;AACH,CAvBD;;GAAMN,Q;;AAyBN,eAAeA,QAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\"\n\nconst useFetch = (url) => {\n\n    const [data,setData] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState(false)\n\n    useEffect(()=>{\n        const fetchData = async()=>{\n            setLoading(true);\n            try {\n                const res = await axios.get(url)\n                setData(res.data)\n            } catch (error) {\n                setError(error)\n            }\n            setLoading(false)\n        }\n        fetchData();\n    },[url])\n\n\n\n    return {data,loading,error}\n}\n\nexport default useFetch;"]},"metadata":{},"sourceType":"module"}